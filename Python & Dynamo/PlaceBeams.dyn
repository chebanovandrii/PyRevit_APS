{
  "Uuid": "aab66187-8f57-4aa9-98c1-22becee97749",
  "IsCustomNode": false,
  "Description": null,
  "Name": "PlaceBeams",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "D:\\Development\\BIM\\Beams.xlsx",
      "InputValue": "..\\..\\..\\Beams.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "e9103c2ccc254646aec4f781abdfe839",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f364abc5fee74a4aa3bce91cde02e444",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Level 1",
      "Id": "5bb07983e8b8404fa3f68dba3302eaff",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "328245884b0a4ddba3f4a75ed8648b2a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\n# Import Revit API\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import Point\r\n\r\n# Input: Excel file path, level, and beam type data\r\nexcel_data = IN[0]  # Full path to the Excel file\r\nstart_point = []\r\nresult = \"\"\r\n\r\n#Iterate through the rows in Excel and place beams\r\nfor row in range(len(excel_data)):\r\n\ttry:\r\n\t\tis_available = True\r\n\t\t\r\n\t\tfor col in range(len(excel_data[0])):\r\n\t\t\tif excel_data[row][col] is None:\r\n\t\t\t\tis_available = False\r\n\t\t\t\tresult += str(row)+ \" The data is not accuraccy \\n\"\r\n\t\t\t\tbreak\r\n\t\r\n\t\tif is_available:\r\n\t\t\tstartX = float(excel_data[row][0])\r\n\t\t\tstartY = float(excel_data[row][1])\r\n\t\t\tstartZ = float(excel_data[row][2])\r\n\t\t\tendX = float(excel_data[row][3])\r\n\t\t\tendY = float(excel_data[row][4])\r\n\t\t\tendZ = float(excel_data[row][5])\r\n\t\t\t\r\n\t\t\tresult += str(startX) + \", \" + str(startY) + \", \" + str(endX) + \", \" + str(endY)\r\n\t\t\t\r\n\t\t\tstart_point.append(Point.ByCoordinates(startX, startY, startZ))\r\n\r\n\texcept Exception as e:\r\n\t\tresult += str(e)+ \"\\n\"\r\n\t\tcontinue\r\n\t\t\r\n#Output: List of created beams\r\nOUT = start_point",
      "VariableInputPorts": true,
      "Id": "c077441a58244cf48b39226c39531e65",
      "Inputs": [
        {
          "Id": "5c266e6b0a1b4d24803399c7a0d486be",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ba874d7d87cc4a6ab5be56e9e90c1abd",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "300 x 600mm",
      "Id": "589d649824dd4dab8000a2cd6c769b7e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "18b4890a476a4383adafccf8fc4ed883",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportExcel@var,string,bool,bool",
      "Id": "7e564aa7d2194ce4b849ec7705ba1044",
      "Inputs": [
        {
          "Id": "a197e2ede62f4979a8e733d42a335530",
          "Name": "file",
          "Description": "File representing the Microsoft Excel spreadsheet.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1449d50cc0644c39ec658f0bb2b87d6",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing the data.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "581b8c93003c4a7e8c1e2b8dfa7985a5",
          "Name": "readAsStrings",
          "Description": "Toggle to switch between reading Excel file as strings.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "54bae364613b4aef974c88f244a508a9",
          "Name": "showExcel",
          "Description": "Toggle to switch between showing and hiding the main Excel window.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d707f06dfae549a8960925d2bb9e0ff8",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0]. This node requires Microsoft Excel to be installed.\n\nData.ImportExcel (file: var, sheetName: string, readAsStrings: bool = false, showExcel: bool = true): var[][]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Beams",
      "Id": "8c52d282f40a4f348aa15b500c3a4c76",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f4e13d1e958c4e92b0b5c296f36b544e",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "e0756cb9c969441e9446203ddea077d3",
      "Inputs": [
        {
          "Id": "bd9f028a0926409193d719126bf85108",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ab93323b5dcb4bc7b2196a7ec2175d06",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "36b97d426e1d4465b9800bb5cb5f935f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b7d926e5f4f74d8e8328a49f22c217a0",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "dc82a4c25e124622b65752cd0fcdb4bb",
      "Inputs": [
        {
          "Id": "422cfd0e756f430ea14279df27c6b097",
          "Name": "startPoint",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "430bee96833c454cb1173576ab2c818b",
          "Name": "endPoint",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ceecd9107dd24a5c9a15ef872a0ffae9",
          "Name": "Line",
          "Description": "Line",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\n# Import Revit API\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import Point\r\n\r\n# Input: Excel file path, level, and beam type data\r\nexcel_data = IN[0]  # Full path to the Excel file\r\nend_point = []\r\nresult = \"\"\r\n\r\n#Iterate through the rows in Excel and place beams\r\nfor row in range(len(excel_data)):\r\n\ttry:\r\n\t\tis_available = True\r\n\t\t\r\n\t\tfor col in range(len(excel_data[0])):\r\n\t\t\tif excel_data[row][col] is None:\r\n\t\t\t\tis_available = False\r\n\t\t\t\tresult += str(row)+ \" The data is not accuraccy \\n\"\r\n\t\t\t\tbreak\r\n\t\r\n\t\tif is_available:\r\n\t\t\tstartX = float(excel_data[row][0])\r\n\t\t\tstartY = float(excel_data[row][1])\r\n\t\t\tstartZ = float(excel_data[row][2])\r\n\t\t\tendX = float(excel_data[row][3])\r\n\t\t\tendY = float(excel_data[row][4])\r\n\t\t\tendZ = float(excel_data[row][5])\r\n\t\t\t\r\n\t\t\tresult += str(startX) + \", \" + str(startY) + \", \" + str(endX) + \", \" + str(endY)\r\n\t\t\t\r\n\t\t\tend_point.append(Point.ByCoordinates(endX, endY, endZ))\r\n\r\n\texcept Exception as e:\r\n\t\tresult += str(e)+ \"\\n\"\r\n\t\tcontinue\r\n\t\t\r\n#Output: List of created beams\r\nOUT = end_point",
      "VariableInputPorts": true,
      "Id": "15410d0e15c34ef3b5a8a230f801c5a6",
      "Inputs": [
        {
          "Id": "9b8662012ef84ad6854e1ab07994f2ae",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c11057cf23b3413786887023fbe7a3a7",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.StructuralFraming.BeamByCurve@Autodesk.DesignScript.Geometry.Curve,Revit.Elements.Level,Revit.Elements.FamilyType",
      "Id": "99f2f8dc331a45009319198452c41a68",
      "Inputs": [
        {
          "Id": "84068ac220e1410aae97fd0c01952f74",
          "Name": "curve",
          "Description": "The curve which defines the center line of the beam.\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "243937a312c642f5ad15677e89140add",
          "Name": "level",
          "Description": "The level with which you'd like the beam to be associated.\n\nLevel",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0538be40a2f7426f9cfdeb6323b3a789",
          "Name": "structuralFramingType",
          "Description": "The structural framing type representing the beam.\n\nFamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ad2426b59d5e471dadd0308038411ca0",
          "Name": "StructuralFraming",
          "Description": "StructuralFraming",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a beam.\n\nStructuralFraming.BeamByCurve (curve: Curve, level: Level, structuralFramingType: FamilyType): StructuralFraming"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Import necessary modules\r\nimport clr\r\n\r\n# Import Revit Services\r\nclr.AddReference('RevitServices')\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\n# Import Revit API\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import FilteredElementCollector, BuiltInCategory, Level\r\n\r\n# Get the current Revit document\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# Input: Level name to search for\r\nlevel_name = IN[0]  # Input comes from Dynamo\r\n\r\n# Collect all levels in the project\r\nlevels_collector = FilteredElementCollector(doc)\\\r\n    .OfCategory(BuiltInCategory.OST_Levels)\\\r\n    .WhereElementIsNotElementType()\r\n\r\n# Find the level by name\r\nmatched_level = None\r\n\r\nfor level in levels_collector:\r\n    if level.Name == level_name:\r\n        matched_level = level\r\n        break\r\n\r\nif matched_level is None:\r\n\tmatched_level = levels_collector.FirstElement()\r\n\r\n# Output the matched level or None if not found\r\nOUT = matched_level\r\n",
      "VariableInputPorts": true,
      "Id": "db612c9eb46c4e0dad43d9f6a231d2d5",
      "Inputs": [
        {
          "Id": "ceda472530504aa8a3d9ef785ca35bd9",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "394cba6e80d241339be2a4ae92b4c50f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Import Revit Services\r\nclr.AddReference('RevitServices')\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\n# Import Revit API\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.Creation import ItemFactoryBase\r\n\r\n# Get the current Revit document\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\nbeam_type_name = IN[0] \r\n\r\n# Get the beam type from the Revit document by name\r\nbeam_type = None\r\nbeam_types = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_StructuralFraming).WhereElementIsElementType()\r\n\r\nif beam_type is None:\r\n\tbeam_type = beam_types.FirstElement()\r\n\r\n# Place your code below this line\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = beam_type",
      "VariableInputPorts": true,
      "Id": "1d422df154554e17b66ec874c1768f69",
      "Inputs": [
        {
          "Id": "2637075dd2654973a1e64cae97e877e1",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "982190c4dd884ce5877812640012c599",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "54789a6003d048ec97e66c10564c5aa4",
      "Inputs": [
        {
          "Id": "733979d900be41f5bd9dc5a7b5eaa6e0",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "df606a2252d9494fa3d53d615a4aab5a",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "8a9781d38d964c619ef05ad037c9a565",
      "Inputs": [
        {
          "Id": "434d9a75831c420faf1c3ffe8a633f28",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bc5a1b8d2e2343e98863ec5856720f88",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "b5bdbddd8a714b7cb93a7ba875f34bd9",
      "Inputs": [
        {
          "Id": "b6b89c01415640f8aff17571ec046821",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "95237a02b9514b9294c95b1abb00de6b",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "831635781571428ca407176c658179d3",
      "Inputs": [
        {
          "Id": "2dfa2099eb5f424a98e4ec302ade743d",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "62f2b90e894b484f9af4ab045901a583",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    }
  ],
  "Connectors": [
    {
      "Start": "f364abc5fee74a4aa3bce91cde02e444",
      "End": "bd9f028a0926409193d719126bf85108",
      "Id": "185df92c23f444308337c3df33768690"
    },
    {
      "Start": "328245884b0a4ddba3f4a75ed8648b2a",
      "End": "ceda472530504aa8a3d9ef785ca35bd9",
      "Id": "09d32838a8754747bc383dc14381012d"
    },
    {
      "Start": "ba874d7d87cc4a6ab5be56e9e90c1abd",
      "End": "422cfd0e756f430ea14279df27c6b097",
      "Id": "32d4b33b6f98488c916dabefe715322c"
    },
    {
      "Start": "ba874d7d87cc4a6ab5be56e9e90c1abd",
      "End": "2dfa2099eb5f424a98e4ec302ade743d",
      "Id": "10e3dae900d54b7f8b060530aea176e2"
    },
    {
      "Start": "18b4890a476a4383adafccf8fc4ed883",
      "End": "2637075dd2654973a1e64cae97e877e1",
      "Id": "8bf67e0900af44929b472cfba8243a89"
    },
    {
      "Start": "d707f06dfae549a8960925d2bb9e0ff8",
      "End": "5c266e6b0a1b4d24803399c7a0d486be",
      "Id": "53d5a839af7c4a14a8d7a346dea62ba9"
    },
    {
      "Start": "d707f06dfae549a8960925d2bb9e0ff8",
      "End": "9b8662012ef84ad6854e1ab07994f2ae",
      "Id": "eadb0f38aa30444194efa04f627fdebf"
    },
    {
      "Start": "f4e13d1e958c4e92b0b5c296f36b544e",
      "End": "e1449d50cc0644c39ec658f0bb2b87d6",
      "Id": "e562e6ccd72f469f83f7b3b19518fe56"
    },
    {
      "Start": "ab93323b5dcb4bc7b2196a7ec2175d06",
      "End": "a197e2ede62f4979a8e733d42a335530",
      "Id": "10913cc95d6c42919ecf0fee2f9b2d51"
    },
    {
      "Start": "b7d926e5f4f74d8e8328a49f22c217a0",
      "End": "581b8c93003c4a7e8c1e2b8dfa7985a5",
      "Id": "ca6f7484876741738fcff9e80871054a"
    },
    {
      "Start": "ceecd9107dd24a5c9a15ef872a0ffae9",
      "End": "84068ac220e1410aae97fd0c01952f74",
      "Id": "242d61508c6d4cc2b14fad331af5ae9b"
    },
    {
      "Start": "ceecd9107dd24a5c9a15ef872a0ffae9",
      "End": "b6b89c01415640f8aff17571ec046821",
      "Id": "e825a6a9847a4a30b10d2fc520a3a036"
    },
    {
      "Start": "c11057cf23b3413786887023fbe7a3a7",
      "End": "430bee96833c454cb1173576ab2c818b",
      "Id": "60d08a4317c54542864690bece4b0854"
    },
    {
      "Start": "394cba6e80d241339be2a4ae92b4c50f",
      "End": "243937a312c642f5ad15677e89140add",
      "Id": "f3f2620e78384a1ebd80ab8f44b4cbd5"
    },
    {
      "Start": "394cba6e80d241339be2a4ae92b4c50f",
      "End": "434d9a75831c420faf1c3ffe8a633f28",
      "Id": "1f2af82e50bc408d8f48b1e5f9ca613d"
    },
    {
      "Start": "982190c4dd884ce5877812640012c599",
      "End": "0538be40a2f7426f9cfdeb6323b3a789",
      "Id": "4c1e93f2e5284e15a3694a7a9e4d91bc"
    },
    {
      "Start": "982190c4dd884ce5877812640012c599",
      "End": "733979d900be41f5bd9dc5a7b5eaa6e0",
      "Id": "4d1220f0fa594891a6b9dc0986f13c38"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.1.0.7500",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "e9103c2ccc254646aec4f781abdfe839",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -310.81951513652132,
        "Y": 26.498455359684087
      },
      {
        "ShowGeometry": true,
        "Name": "Level",
        "Id": "5bb07983e8b8404fa3f68dba3302eaff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 226.97763978295768,
        "Y": 399.59253859344938
      },
      {
        "ShowGeometry": true,
        "Name": "Start Point",
        "Id": "c077441a58244cf48b39226c39531e65",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 295.15984230185768,
        "Y": 120.32206151935324
      },
      {
        "ShowGeometry": true,
        "Name": "Beam Type",
        "Id": "589d649824dd4dab8000a2cd6c769b7e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 197.71422462085053,
        "Y": 534.57951477278448
      },
      {
        "ShowGeometry": true,
        "Name": "Data.ImportExcel",
        "Id": "7e564aa7d2194ce4b849ec7705ba1044",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -37.325436696580084,
        "Y": 245.21442363688439
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "8c52d282f40a4f348aa15b500c3a4c76",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -285.79658423313219,
        "Y": 129.84561098197918
      },
      {
        "ShowGeometry": true,
        "Name": "File From Path",
        "Id": "e0756cb9c969441e9446203ddea077d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -150.55628252851409,
        "Y": 26.901412148438752
      },
      {
        "ShowGeometry": true,
        "Name": "Boolean",
        "Id": "36b97d426e1d4465b9800bb5cb5f935f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -312.82142355051116,
        "Y": 201.94216745130853
      },
      {
        "ShowGeometry": true,
        "Name": "Line.ByStartPointEndPoint",
        "Id": "dc82a4c25e124622b65752cd0fcdb4bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 541.12014686566226,
        "Y": 150.09508885401263
      },
      {
        "ShowGeometry": true,
        "Name": "End Point",
        "Id": "15410d0e15c34ef3b5a8a230f801c5a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 284.102886410544,
        "Y": 259.016269914545
      },
      {
        "ShowGeometry": true,
        "Name": "StructuralFraming.BeamByCurve",
        "Id": "99f2f8dc331a45009319198452c41a68",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 917.5324672965794,
        "Y": 268.49217638925512
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "db612c9eb46c4e0dad43d9f6a231d2d5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 391.68178437880863,
        "Y": 398.0158264052854
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "1d422df154554e17b66ec874c1768f69",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 412.12559007949039,
        "Y": 534.96320685821536
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "54789a6003d048ec97e66c10564c5aa4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 699.16642797521217,
        "Y": 538.84558434007943
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "8a9781d38d964c619ef05ad037c9a565",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 501.88436557553541,
        "Y": 285.72161912456045
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "b5bdbddd8a714b7cb93a7ba875f34bd9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 910.752365374728,
        "Y": 15.979978923548657
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "831635781571428ca407176c658179d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 410.05693290102795,
        "Y": -129.04567085888834
      }
    ],
    "Annotations": [],
    "X": 254.47775295933479,
    "Y": 210.96751429865097,
    "Zoom": 0.55986990167667849
  }
}